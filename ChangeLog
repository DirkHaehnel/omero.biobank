2011-05-08    <zag@manzanillo>

	* bl/vl/sample/kb/drivers/omero/data_object.py
	(DataObject.__init__): added support for proxy propagation. This
	should be fixed in a systematic way.

2011-05-05    <zag@manzanillo>

	* bl/vl/app/importer/plate_well.py (Recorder): Added prefetching support.

2011-05-03    <zag@manzanillo>

	* bl/vl/app/importer/individual.py (Recorder.record): clean up.

	* bl/vl/individual/kb/drivers/omero/proxy.py (Proxy.get_enrolled): Added.

2011-04-30    <zag@manzanillo>

	* bl/vl/sample/kb/drivers/omero/samples_container.py (TiterPlate):
	moved barcode, label and virtualContainer handling to superclass

	* tests/bl/vl/individual/kb/test_ikb.py (TestIKB.test_enrollment): in phase ...

	* bl/vl/individual/kb/drivers/omero/individual.py (Individual): in phase ...

	* bl/vl/sample/kb/drivers/omero/study.py (Study): in phase with ...

	* bl/vl/individual/kb/drivers/omero/enrollment.py 
	(Enrollment): in phase with new convoluted...

	* bl/vl/sample/kb/drivers/omero/proxy_core.py (ProxyCore.save):
	Added support for the convoluted dynamic object fetching mechanism.

	* bl/vl/sample/kb/drivers/omero/wrapper.py (OmeroWrapper): Added a
	convoluted mechanism to allow dynamic object fetching.

2011-04-28    <zag@manzanillo>

	* bl/vl/app/importer/plate_well.py (Recorder): same as below...

	* bl/vl/app/importer/titer_plate.py (Recorder):  same as below...

	* bl/vl/app/importer/blood_sample.py (import_blood_sample_implementation): same as below..

	* bl/vl/app/importer/bio_sample.py (BioSampleRecorder): added
	keep_tokens support. Humm, why am i not using **kw???

	* bl/vl/app/importer/core.py (Core.__init__): added keep_tokens support.

	* bl/vl/app/importer/individual.py (Recorder): added keep_tokens support.

	* tools/importer (App.make_parser): added keep-token flag

	* tests/bl/vl/sample/kb/test_skb.py (OME_KEEP): in phase with new
	keep_section_open mechanism.

	* bl/vl/sample/kb/drivers/omero/proxy_core.py (ProxyCore): Added a
	simple keep_session_open mechanism to speed-up operations.

	* tools/importer (App): added titer_plate module.

	* bl/vl/app/importer/plate_well.py: moved all the titer_plate
	stuff to titer_plate.py.

	* bl/vl/app/importer/titer_plate.py: Added.

2011-04-27    <zag@manzanillo>

	* tests/bl/vl/sample/kb/skb_object_creator.py: labLabel -> label

	* models/sample/samples_container.ome.xml: labLabel -> label

	* bl/vl/sample/kb/drivers/omero/proxy.py (Proxy.get_bio_sample): labLabel -> label

	* models/sample/bio_sample.ome.xml: changed labLabel to label

	* tools/extract_individuals.py (load_individuals): now we keep the
	first record found when there is a 'parental' conflict between
	records.

2011-04-24    <zag@pflip>

	* bl/vl/individual/pedigree.py (import_pedigree): Changed
	algorithm. Now it should be able to handle a large number of individuals.

2011-04-22    <zag@pflip>

	* examples/load_data.py (network_builder.call_genotypes): in phase
	with SNPMarkersSet and GenotypeDataSample

	* tests/bl/vl/sample/kb/skb_object_creator.py (SKBObjectCreator.create_snp_markers_set): added.
	(SKBObjectCreator.create_genotype_data_sample): added. Added also relates tests in test_skb.py

	* bl/vl/sample/kb/drivers/omero/genotyping.py (SNPMarkersSet): added.
	(GenotypeDataSample): added.

	* bl/vl/app/importer/core.py (Core.get_device): in phase with new device API

	* examples/load_data.py (network_builder.get_device): in phase
	with new device API

	* tests/bl/vl/sample/kb/test_skb.py (TestSKB.test_device): updated
	to the new API

	* bl/vl/sample/kb/drivers/omero/proxy.py (Proxy.get_device): now
	we search by label.

	* tests/bl/vl/sample/kb/skb_object_creator.py
	(SKBObjectCreator.create_device): in phase with changes to new
	python interface.

	* bl/vl/sample/kb/drivers/omero/device.py (Device): in phase with
	changes to the ome model.

	* models/sample/device.ome.xml: Added a required, unique,
	attribute name. We need it to distinguish between, e.g., physical
	instances of a given class. Changed 'vendor' to a politically
	neutral 'maker'

