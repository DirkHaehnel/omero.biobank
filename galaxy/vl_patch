#!/usr/bin/env python

# BEGIN_COPYRIGHT
# END_COPYRIGHT


import sys, os, argparse


BUILDAPP_PATCHES = [
  ("from galaxy.app import UniverseApplication",
   "from galaxy.vl_app import UniverseApplication")
  ]


def cp(src, dst, patches=None):
  if patches is None:
    patches = []
  with open(src) as f:
    code = f.read()
  for old, new in patches:
    code = code.replace(old, new)
  with open(dst, 'w') as outf:
    outf.write(code)
  print "%s --> %s" % (src, dst)

def make_parser():
  parser = argparse.ArgumentParser('Patch Galaxy instance enabling OMERO.biobank support')
  parser.add_argument('--galaxy_home', type=str, required=True,
                      help='Galaxy home directory')
  parser.add_argument('--blue_collar', action='store_true',
                      help='apply patch to a "blue collar" Galaxy')
  return parser

def main(argv):
  parser = make_parser()
  args = parser.parse_args()
  
  galaxy_home = args.galaxy_home

  this_dir = os.path.dirname(sys.argv[0])
  galaxy_pkg_dir = os.path.join(galaxy_home, "lib", "galaxy")
  cp(os.path.join(this_dir, "vl_app.py"),
     os.path.join(galaxy_pkg_dir, "vl_app.py"))

  if not args.blue_collar:
    webapp_dir = 'web'
  else:
    webapp_dir = 'webapps/galaxy'

  cp(os.path.join(galaxy_pkg_dir, webapp_dir, "buildapp.py"),
     os.path.join(galaxy_pkg_dir, webapp_dir, "buildapp.py"),
     BUILDAPP_PATCHES)


if __name__ == "__main__":
  main(sys.argv)


# Local Variables: **
# mode: python **
# End: **
