<tool id="vl_import_data_sample" name="VLI.data_sample">
  <description>import DataSample definitions within omero/vl</description>
  <command interpreter="python">
    #if $__app__.config.vl_import_enabled_users.split(',').count($__user_email__)==1 #importer.py
    #else #unauthorized_access.py
    #end if
    #if $advanced_configuration.configuration_level == 'advanced'
      --host=$advanced_configuration.vl_host
      --user=$advanced_configuration.vl_user
      --passwd=$advanced_configuration.vl_passwd
    #else
      --host=$__app__.config.omero_default_host
      --user=$__app__.config.omero_default_user
      --passwd="$__app__.config.omero_default_passwd"
    #end if
    --operator=galaxy
    --ifile=$input1
    --ofile=$output1
    --loglevel=$__app__.config.vl_loglevel
    --logfile=${logfile}
    data_sample
    #if str($study) != 'use_provided'
      --study ${study}
    #end if 
    #if str($source_type) != 'use_provided'
      --source-type=${source_type}
    #end if
    #if str($device_type) != 'use_provided'
      --device-type=${device_type}
    #end if
    #if str($scanner) != 'use_provided'
      --scanner=${scanner}
    #end if
  </command>  
  <inputs>
    <param format="tabular" name="input1" type="data"
	   label="A tabular dataset with the following columns ..."/>

    <param name="study" type="select" label="Context study" 
	   help="Choose from the already defined studies. See below.">    
      <options from_parameter="tool.app.known_studies" 
	       transform_lines="[ &quot;%s%s%s:%s&quot; 
                                  % ( l[0], self.separator, l[0], l[1][:40] ) 
                                  for l in obj ]">
        <column name="value" index="0"/>
        <column name="name" index="1"/>
        <filter type="sort_by" column="0"/>
        <filter type="add_value" name="Records provide study labels" 
                value="use_provided" index="0"/>
      </options>
    </param>

    <param name="source_type" type="select"
	   label="Type of the source"
	   help="Choose from the following. See below.">
      <option value="use_provided"       selected="true">
      Use record provided</option>
      <option value="Individual">Individual</option>
      <option value="Tube">Tube</option>
      <option value="PlateWell">PlateWell</option>
      <option value="DataSample">DataSample</option>
    </param>

    <param name="device_type" type="select"
	   label="Type of the device"
	   help="Choose from the following. See below.">
      <option value="use_provided"       selected="true">
      Use record provided</option>
      <option value="Device">Device</option>
      <option value="Chip">Chip</option>
      <option value="SoftwareProgram">SoftwareProgram</option>
    </param>

    <param name="scanner" type="select" label="Scanner used" 
	   help="Choose from the possible scanners. See below.">    
      <options from_parameter="tool.app.known_scanners" 
	       transform_lines="[ &quot;%s%s%s(%s)&quot; 
                                  % ( l[0], self.separator, l[1], l[2]) 
                                  for l in obj ]">
        <column name="value" index="0"/>
        <column name="name" index="1"/>
        <filter type="sort_by" column="1"/>
        <filter type="add_value" name="Records provide scanner ids" 
                value="use_provided" index="0"/>
      </options>
    </param>

    <!-- ************************************************** -->
    <conditional name="advanced_configuration">
      <param name="configuration_level" type="select" 
	     label="Configuration level">
	<option value="default" selected="true">Default configuration</option>	
	<option value="advanced">Advanced configuration</option>
      </param>
      <when value="default"/>
      <when value="advanced">
	<param name="vl_host" size="40" type="text" value="localhost" 
	       label="Omero/VL host"/>
	<param name="vl_user" size="20" type="text" value="root" 
	       label="Omero/VL user"/>
	<param name="vl_passwd" size="20" type="text" value="What? Me worry?" 
	       label="Omero/VL passwd"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="output1" label="${tool.name}.mapping"/>
    <data format="txt" name="logfile"     label="${tool.name}.logfile"/>
  </outputs>
  <help>
Will read in a tsv file with the following columns::

  study  label source device device_type scanner options
  ASTUDY foo01 v03909 v9309  Chip        v99020  celID=0009099090
  ASTUDY foo02 v03909 v99022 Scanner     v99022  conf1=...,conf2=...
  ....

In this example, the first line corresponds to a dataset obtained by
using chip v9309 on scanner v99020, while the second datasample has
been obtained using a technology directly using a scanner, e.g., an
Illumina HiSeq 2000. The '''scanner''' column is there as a
convenience to support a more detailed description of a chip-based
acquisition.

The general strategy is to decide what data objects should be
instantiated by looking at the chip column and at its corresponding
maker,model,release.

The optional column '''scanner''', the vid of the scanner device, is
used in cases, such as Affymetrix genotyping, where it is relevant.

It is also possible to import DataSample(s) that are the results of
processing other DataSample(s). Here is an example::

  study  label source device device_type     options
  ASTUDY foo01 v03909 v99021 SoftwareProgram conf1=...,conf2=...
  ASTUDY foo02 v03909 v99021 SoftwareProgram conf1=...,conf2=...
  ....
  </help>
</tool>
