<tool id="vl_import_laneslot" name="VLI.laneslot">
  <description>import LaneSlot definitions within omero.biobank</description>
  <command interpreter="python">
    importer.py
    #if $advanced_configuration.configuration_level == 'advanced'
      --host=$advanced_configuration.vl_host
      --user=$advanced_configuration.vl_user
      --passwd=$advanced_configuration.vl_passwd
    #end if
    --operator=galaxy
    --ifile=${in_file}
    --ofile=${out_file}
    --report_file=${report_file}
    --loglevel=$__app__.config.vl_loglevel
    --logfile=${log_file}
    laneslot
    #if str($study) != 'use_provided'
      --study=${study}
    #end if
    #if str($source_type) != 'use_provided'
      --source_type=${source_type}
    #end if
    #if str($content) != 'use_provided'
      --content=${content}
    #end if
  </command>
  <inputs>
    <param format="tabular" name="in_file" type="data"
	   label="A tabular dataset with the following columns..."/>

    <param name="study" type="select" label="Context study"
	   help="Choose from the already defined studies. See below.">
      <options from_parameter="tool.app.known_studies"
	       transform_lines="[ &quot;%s%s%s:%s&quot;
	                          % ( l[0], self.separator, l[0], l[1][:40] )
				  for l in obj ]">
	<column name="value" index="0"/>
	<column name="name" index="1"/>
	<filter type="sort_by" column="0"/>
	<filter type="add_value" name="Records provide study labels"
		value="use_provided" index="0"/>
      </options>
    </param>

    <param name="source_type" type="select"
	   label="Type of the source object"
	   help="Choose from the legal types. Seel below.">
      <option value="use_provided" selected="true">
	Records provide source type
      </option>
      <option value="Tube">Tube</option>
      <option value="PlateWell">PlateWell</option>
      <option value="Individual">Individual</option>
    </param>

    <param name="content" type="select"
	   label="Type of content"
	   help="Choose from the legal types. See below.">
      <option value="use_provided" selected="true">
	Records provide content type
      </option>
      <option value="DNA">DNA</option>
      <option value="RNA">RNA</option>
    </param>

    <!-- ************************************************** -->
     <conditional name="wait_for_trigger">
      <param name="enable_trigger" type="boolean" checked="false"
	     label="Wait for another tool to end before running this tool"/>
      <when value="true">
	<param format="txt" name="trigger_file" type="data"
	       label="Select the LOG file that will be used as trigger"/>
      </when>
    </conditional>   

    <conditional name="advanced_configuration">
      <param name="configuration_level" type="select" 
	     label="Configuration level">
	<option value="default" selected="true">Default configuration</option>	
	<option value="advanced">Advanced configuration</option>
      </param>
      <when value="default"/>
      <when value="advanced">
	<param name="vl_host" size="40" type="text" value="localhost" 
	       label="Omero/VL host"/>
	<param name="vl_user" size="20" type="text" value="root" 
	       label="Omero/VL user"/>
	<param name="vl_passwd" size="20" type="text" value="What? Me_worry?" 
	       label="Omero/VL passwd"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="out_file" label="${tool.name}.mapping"/>
    <data format="tabular" name="report_file" label="${tool.name}.report"/>
    <data format="txt" name="log_file" label="${tool.name}.logfile"/>
  </outputs>

  <help>
A lane slot record will have the following fields::

  lane     tag     content    source
  V123411  ATCACG  DNA        V4512415
  V123411  CGATGT  DNA        V1415512
  V412511          DNA        V1909012
  V661251  TGACCA  DNA        V1123111
  V661251  CTTGTA  DNA        V1211141
  ....

the content column can be option if passed as script's input value,
tag column is optional too.
  </help>
</tool>