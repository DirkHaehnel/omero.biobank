<tool id="vl_import_marker_definition" name="VLI.marker_definition">
  <description>import Marker definitions within omero/vl</description>
  <command interpreter="python">
    #if $__app__.config.vl_import_enabled_users.split(',').count($__user_email__)==1 #importer.py
    #else #unauthorized_access.py
    #end if
    #if $advanced_configuration.configuration_level == 'advanced'
      --host=$advanced_configuration.vl_host
      --user=$advanced_configuration.vl_user
      --passwd=$advanced_configuration.vl_passwd
    #else
      --host=$__app__.config.omero_default_host
      --user=$__app__.config.omero_default_user
      --passwd="$__app__.config.omero_default_passwd"
    #end if
    --operator=galaxy
    --ifile=$input1
    --ofile=$output1
    --loglevel=$__app__.config.vl_loglevel
    --logfile=${logfile}
    marker_definition
    #if str($study) != 'use_provided'
      --study ${study}
    #end if 
    --source ${source}
    --context ${context}
    --release ${release}
    --ref-genome  ${ref_genome}
    --dbsnp-build ${dbsnp_build}
  </command>  
  <inputs>
    <param format="tabular" name="input1" type="data"
	   label="A tabular dataset with the following columns ..."/>

    <param name="study" type="select" label="Context study" 
	   help="Choose from the already defined studies. See help below.">    
      <options from_parameter="tool.app.known_studies" 
	       transform_lines="[ &quot;%s%s%s:%s&quot; 
                                  % ( l[0], self.separator, l[0], l[1][:40] ) 
                                  for l in obj ]">
        <column name="value" index="0"/>
        <column name="name" index="1"/>
        <filter type="sort_by" column="0"/>
        <filter type="add_value" name="Records provide study labels" 
                value="use_provided" index="0"/>
      </options>
    </param>

    <param name="source" size="40" type="text" value="" 
	   optional="false"
	   label="source"/>
    <param name="context" size="40" type="text" value="" 
	   optional="false"
	   label="context"/>
    <param name="release" size="40" type="text" value="" 
	   optional="false"
	   label="release"/>
    <param name="ref_genome" size="40" type="text" value="" 
	   optional="false"
	   label="reference genome"/>
    <param name="dbsnp_build" size="40" type="integer" value="0"
	   optional="false"
	   label="dbSNP build"/>


    <!-- ************************************************** -->
    <conditional name="advanced_configuration">
      <param name="configuration_level" type="select" 
	     label="Configuration level">
	<option value="default" selected="true">Default configuration</option>	
	<option value="advanced">Advanced configuration</option>
      </param>
      <when value="default"/>
      <when value="advanced">
	<param name="vl_host" size="40" type="text" value="localhost" 
	       label="Omero/VL host"/>
	<param name="vl_user" size="20" type="text" value="root" 
	       label="Omero/VL user"/>
	<param name="vl_passwd" size="20" type="text" value="What?Me worry?" 
	       label="Omero/VL passwd"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="output1" label="${tool.name}.mapping"/>
    <data format="txt" name="logfile"     label="${tool.name}.logfile"/>
  </outputs>
  <help>
Will read in a tsv file with the following columns::

  label         rs_label   mask                    strand allele_a allele_b
  SNP_A-1780419 rs6576700  <lflank/>[A/G]<rflank/> TOP    A      G
  ...

Where label is supposed to be the unique label for this marker in the
(source, context, release) context, rs_label is the dbSNP db label for
this snp (it could be the string ``None`` if it not defined/not
known). The column mask contains the SNP definition. The strand column
could either be the actual 'illumina style' strand used to define the
alleles in the alleles columns, or the string 'None' which means that
the alleles in the allele column are defined against the mask in the
mask column.

It will, for each row, convert mask to the TOP strand following
Illumina conventions and then save a record for it in VL.

The saved tuple is (source, context, release, label, rs_label,
TOP_mask)

There are no collision controls.

It will output a a tsv file with the following columns::

   study    label     type    vid
   ASTUDY   SNP_A-xxx Marker  V000002222
   ...

 </help>

</tool>