<tool id="vl_import_data_collection" name="VLI.data_collection">
  <description>import DataCollection definitions within omero/vl</description>
  <command interpreter="python">
    #if $__app__.config.vl_import_enabled_users.split(',').count($__user_email__)==1 #importer.py
    #else #unauthorized_access.py
    #end if
    #if $advanced_configuration.configuration_level == 'advanced'
      --host=$advanced_configuration.vl_host
      --user=$advanced_configuration.vl_user
      --passwd=$advanced_configuration.vl_passwd
    #end if
    --operator=galaxy
    --ifile=$input
    --ofile=$output
    --report_file=$report
    --loglevel=$__app__.config.vl_loglevel
    --logfile=${logfile}
    data_collection
    #if str($study) != 'use_provided'
      --study ${study}
    #end if 
    #if str($data_sample_type) != 'use_provided'
      --data_sample-shape=${data_sample_type}
    #end if
    #if str($label)
      --label=${label}
    #end if
  </command>  
  <inputs>
    <param format="tabular" name="input" type="data"
	   label="A tabular dataset with the following columns ..."/>

    <param name="study" type="select" label="Context study" 
	   help="Choose from the already defined studies. See below.">    
      <options from_parameter="tool.app.known_studies" 
	       transform_lines="[ &quot;%s%s%s:%s&quot; 
                                  % ( l[0], self.separator, l[0], l[1][:40] ) 
                                  for l in obj ]">
        <column name="value" index="0"/>
        <column name="name" index="1"/>
        <filter type="sort_by" column="0"/>
        <filter type="add_value" name="Records provide study labels" 
                value="use_provided" index="0"/>
      </options>
    </param>

    <param name="label" size="20" type="text" value="" 
	   label="collection label"/>

    <param name="data_sample_type" type="select"
	   label="Type of the source"
	   help="Choose from the following. See below.">
      <option value="use_provided"       selected="true">
      Use record provided</option>
      <option value="DataSample">DataSample</option>
    </param>


    <!-- ************************************************** -->
    <conditional name="advanced_configuration">
      <param name="configuration_level" type="select" 
	     label="Configuration level">
	<option value="default" selected="true">Default configuration</option>	
	<option value="advanced">Advanced configuration</option>
      </param>
      <when value="default"/>
      <when value="advanced">
	<param name="vl_host" size="40" type="text" value="localhost" 
	       label="Omero/VL host"/>
	<param name="vl_user" size="20" type="text" value="root" 
	       label="Omero/VL user"/>
	<param name="vl_passwd" size="20" type="text" value="What? Me worry?" 
	       label="Omero/VL passwd"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="output" label="${tool.name}.mapping"/>
    <data format="tabular" name="report" label="${tool.name}.report"/>
    <data format="txt" name="logfile" label="${tool.name}.logfile"/>
  </outputs>
  <help>
Will read in a tsv file with the following columns::

  study    label data_sample
  BSTUDY   dc-01 V0390290
  BSTUDY   dc-01 V0390291
  BSTUDY   dc-02 V0390292
  BSTUDY   dc-02 V390293
  ...

This will create new DataCollection(s), whose label is defined by the
label column, and link to it, using DataCollectionItem objects,
the DataSample object(s) identified by data_sample (a VID).

Records that point to an unknown DataSample will abort the data
collection loading. Previously seen collections will be noisily
ignored. It is not legal to use the importer to add items to a
previously known collection.
  </help>
</tool>
