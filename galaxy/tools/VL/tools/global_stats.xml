<tool id="vl_tools_global_stats" name="VLT.global_stats">
  <description>
    Provide global statistics for a given study.
  </description>
  <command interpreter="python">
    kb_query.py
    #if $advanced_configuration.configuration_level == 'advanced'
      --host=$advanced_configuration.vl_host
      --user=$advanced_configuration.vl_user
      --passwd=$advanced_configuration.vl_passwd
    #end if
    --operator=galaxy
    --ofile=${output1}
    --loglevel=$__app__.config.vl_loglevel
    --logfile=${logfile}
    global_stats
    #if str($study) != 'all_known_studies'
      --study=${study}
    #end if
  </command>  
  <inputs>
    <param name="study" type="select" label="Context study" 
	   help="Choose from the already defined studies. See below.">    
      <options from_parameter="tool.app.known_studies" 
	       transform_lines="[ &quot;%s%s%s:%s&quot; 
                                  % ( l[0], self.separator, l[0], l[1][:40] ) 
                                  for l in obj ]">
        <column name="value" index="0"/>
        <column name="name" index="1"/>
        <filter type="sort_by" column="0"/>
        <filter type="add_value" name="all known studies" 
                value="all_known_studies" index="0"/>
      </options>
    </param>

    <!-- ************************************************** -->
    <conditional name="advanced_configuration">
      <param name="configuration_level" type="select" 
	     label="Configuration level">
	<option value="default" selected="true">Default configuration</option>	
	<option value="advanced">Advanced configuration</option>
      </param>
      <when value="default"/>
      <when value="advanced">
	<param name="vl_host" size="40" type="text" value="biobank05.crs4.it" 
	       label="Omero/VL host"/>
	<param name="vl_user" size="20" type="text" value="galaxy" 
	       label="Omero/VL user"/>
	<param name="vl_passwd" size="20" type="text" value="What?Me worry?" 
	       label="Omero/VL passwd"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="output1" label="${tool.name}.output"/>
    <data format="txt" name="logfile"     label="${tool.name}.logfile"/>
  </outputs>

  <help>
    It will output a tsv files with the following columns::

      study   diagnosis technology gender  counts
      BSTUDY	icd10-cm:G35	AffymetrixCelGENOMEWIDESNP_6	MALE	1
      BSTUDY	icd10-cm:E10	AffymetrixCelGENOMEWIDESNP_6	FEMALE	1
      BSTUDY	local:at0.3	AffymetrixCelGENOMEWIDESNP_6	MALE	2
      BSTUDY	icd10-cm:G35;icd10-cm:E10;icd10-cm:E10	AffymetrixCelGENOMEWIDESNP_6	MALE	1
      BSTUDY	icd10-cm:G35	AffymetrixCelGENOMEWIDESNP_6	FEMALE	1

  </help>

</tool>