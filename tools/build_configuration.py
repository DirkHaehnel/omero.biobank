import argparse, sys, os

import omero
import omero_ServerErrors_ice

CONFIG_VALUES = [
    {'ome_config_value' : 'omero.biobank.graph.engine',
     'kb_config_value'  : 'GRAPH_ENGINE_DRIVER',
     'optional'         : False},
    {'ome_config_value' : 'omero.biobank.graph.uri',
     'kb_config_value'  : 'GRAPH_ENGINE_URI',
     'optional'         : False},
    {'ome_config_value' : 'omero.biobank.graph.user',
     'kb_config_value'  : 'GRAPH_ENGINE_USERNAME',
     'optional'         : True},
    {'ome_config_value' : 'omero.biobank.graph.password',
     'kb_config_value'  : 'GRAPH_ENGINE_PASSWORD',
     'optional'         : True},
    {'ome_config_value' : 'omero.biobank.queue_manager.engine',
     'kb_config_value'  : 'QUEUE_MANAGER_ENGINE_DRIVER',
     'optional'         : False},
    {'ome_config_value' : 'omero.biobank.queue_manager.uri',
     'kb_config_value'  : 'QUEUE_MANAGER_ENGINE_URI',
     'optional'         : False},
    {'ome_config_value' : 'omero.biobank.queue_manager.queue',
     'kb_config_value'  : 'QUEUE_MANAGER_ENGINE_QUEUE',
     'optional'         : False},
    {'ome_config_value' : 'omero.biobank.queue_manager.user',
     'kb_config_value'  : 'QUEUE_MANAGER_ENGINE_USERNAME',
     'optional'         : True},
    {'ome_config_value' : 'omero.biobank.queue_manager.password',
     'kb_config_value'  : 'QUEUE_MANAGER_ENGINE_PASSWORD',
     'optional'         : True}
    ]

def make_parser():
    parser = argparse.ArgumentParser('Build bl-vl config file')
    parser.add_argument('-H', '--host', type=str, help='omero hostname',
                        required=True)
    parser.add_argument('-U', '--user', type=str, help='omero user',
                        required=True)
    parser.add_argument('-P', '--passwd', type=str, help='omero password',
                        required=True)
    return parser

def get_ome_var(session, ome_var, optional):
    v = session.getConfigService().getConfigValue(ome_var)
    if (not v or v == '') and not optional:
        raise ValueError('Mandatory parameter %s is not a known config value, please check your server configuration' % ome_var)
    else:
        if v != '':
            return v
        else:
            return None

def dump_conf_values(output_file, config_values):
    output_file.write('# GENERATED BY tools/build_configuration.py\n')
    for k, v in config_values.iteritems():
        if v:
            output_file.write('%s = "%s"\n' % (k, v))
        else:
            output_file.write('%s = None\n' % k)

def main(argv):
    parser = make_parser()
    args = parser.parse_args(argv)

    c = omero.client(args.host)

    try:
        s = c.createSession(args.user, args.passwd)
        config = {}
        for conf_details in CONFIG_VALUES:
            config[conf_details['kb_config_value']] = get_ome_var(s, conf_details['ome_config_value'],
                                                                  conf_details['optional'])
        with open('../bl/vl/kb/config.py', 'w') as ofile:
            dump_conf_values(ofile, config)
    except omero.SecurityViolation, sv:
        print 'ERROR: unable to build configuration file, the specified account does not belong to your OMERO.biobank SYSTEM users'
    except ValueError, ve:
        print ve.message
    except Exception, e:
        print 'ERROR: Unable to build configuration file'
        print e
    finally:
        c.closeSession()
            

if __name__ == '__main__':
    main(sys.argv[1:])
