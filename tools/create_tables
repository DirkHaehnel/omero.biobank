#!/usr/bin/env python

# BEGIN_COPYRIGHT
# END_COPYRIGHT

"""
Destroy and recreate OMERO tables
=================================

This is a dangerous thing to do. It is destructive, and should be
done only when all tables need to be redefined.
"""

import sys, argparse, logging
from bl.vl.kb.drivers.omero.proxy import Proxy


LOG_FILENAME='create_tables.log'
logging.basicConfig(
  format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
  level=logging.INFO,
  filename=LOG_FILENAME)
logger = logging.getLogger()
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter(
  fmt='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  )
ch.setFormatter(formatter)
logger.addHandler(ch)


def make_parser():
  desc="Destroy and recreate OMERO tables"
  epilog="*** THIS PROGRAM WILL DESTROY ALL YOUR OMERO TABLE DATA ***"
  parser = argparse.ArgumentParser(
    description=desc, epilog=epilog,
    formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
  parser.add_argument('-H', '--host', metavar="STRING",
                      help='OMERO hostname', default='localhost')
  parser.add_argument('-U', '--user', metavar="STRING",
                      help='OMERO user', default='test')
  parser.add_argument('-P', '--passwd', metavar="STRING",
                      help='OMERO password', required=True)  
  parser.add_argument('--do-it', action='store_true',
                      help='I known the risks. I still want to do it')
  return parser


def main():
  parser = make_parser()
  args = parser.parse_args()
  if not args.do_it:
    print 'Are you sure? Really? Then enable the --do-it flag.'
    parser.print_usage()
    sys.exit(0)
  host, user, passwd = args.host, args.user, args.passwd
  logger.info('connecting to %s with user %s' % (host, user))
  p = Proxy(host, user, passwd)
  logger.info('connected')
  logger.info('deleting current snp marker definition table')
  p.delete_snp_marker_defitions_table()
  logger.info('deleted current snp marker definition table')
  logger.info('creating snp marker definition table')
  p.create_snp_marker_definitions_table()
  logger.info('created snp marker definition table')
  logger.info('deleting current ehr tables')
  p.delete_ehr_tables()
  logger.info('deleted current ehr tables')
  logger.info('creating ehr tables')
  p.create_ehr_tables()
  logger.info('created ehr tables')


if __name__ == "__main__":
  main()


# Local Variables: **
# mode: python **
# End: **
